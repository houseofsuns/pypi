# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="DB-GPT is an experimental open-source project that uses localized GPT large models to interact with your data and environment. With this solution, you can beassured that there is no risk of data leakage, and your data is 100% private and secure."

HOMEPAGE="https://github.com/eosphoros-ai/DB-GPT"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="agent cli client code framework hf hf-glm4 hf-glm4-1vl hf-kimi hf-qwen2vl hf-qwen3 llama-cpp llama-cpp-server model-vl proxy-anthropic proxy-ollama proxy-openai proxy-qianfan proxy-tongyi proxy-zhipuai simple-framework"
DEPENDENCIES="~dev-python/aiohttp-3.8.4[${PYTHON_USEDEP}]
	dev-python/cachetools[${PYTHON_USEDEP}]
	~dev-python/chardet-5.1.0[${PYTHON_USEDEP}]
	~dev-python/importlib-resources-5.12.0[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.6.0[${PYTHON_USEDEP}]
	dev-python/snowflake-id[${PYTHON_USEDEP}]
	>=dev-python/tomli-2.2.1[${PYTHON_USEDEP}]
	dev-python/typeguard[${PYTHON_USEDEP}]
	dev-python/typing-inspect[${PYTHON_USEDEP}]
	agent? ( dev-python/auto-gpt-plugin-template[${PYTHON_USEDEP}] )
	agent? ( dev-python/mcp[${PYTHON_USEDEP}] )
	agent? ( <dev-python/numpy-2.0.0[${PYTHON_USEDEP}] )
	agent? ( ~dev-python/pandas-2.2.3[${PYTHON_USEDEP}] )
	agent? ( dev-python/termcolor[${PYTHON_USEDEP}] )
	cli? ( dev-python/click[${PYTHON_USEDEP}] )
	cli? ( ~dev-python/colorama-0.4.6[${PYTHON_USEDEP}] )
	cli? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	cli? ( ~dev-python/psutil-5.9.4[${PYTHON_USEDEP}] )
	cli? ( dev-python/rich[${PYTHON_USEDEP}] )
	cli? ( dev-python/tomlkit[${PYTHON_USEDEP}] )
	client? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	client? ( dev-python/httpx[${PYTHON_USEDEP}] )
	client? ( <=dev-python/tenacity-8.3.0[${PYTHON_USEDEP}] )
	code? ( dev-python/cloudpickle[${PYTHON_USEDEP}] )
	code? ( dev-python/lyric-component-ts-transpiling[${PYTHON_USEDEP}] )
	code? ( dev-python/lyric-js-worker[${PYTHON_USEDEP}] )
	code? ( dev-python/lyric-py-worker[${PYTHON_USEDEP}] )
	code? ( dev-python/lyric-py[${PYTHON_USEDEP}] )
	code? ( dev-python/msgpack[${PYTHON_USEDEP}] )
	framework? ( dev-python/aiofiles[${PYTHON_USEDEP}] )
	framework? ( ~dev-python/alembic-1.12.0[${PYTHON_USEDEP}] )
	framework? ( dev-python/auto-gpt-plugin-template[${PYTHON_USEDEP}] )
	framework? ( dev-python/coloredlogs[${PYTHON_USEDEP}] )
	framework? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	framework? ( dev-python/gitpython[${PYTHON_USEDEP}] )
	framework? ( dev-python/graphviz[${PYTHON_USEDEP}] )
	framework? ( dev-python/gTTS[${PYTHON_USEDEP}] )
	framework? ( dev-python/jsonschema[${PYTHON_USEDEP}] )
	framework? ( ~dev-python/openpyxl-3.1.2[${PYTHON_USEDEP}] )
	framework? ( dev-python/pymysql[${PYTHON_USEDEP}] )
	framework? ( dev-python/python-jsonpath[${PYTHON_USEDEP}] )
	framework? ( dev-python/pyzmq[${PYTHON_USEDEP}] )
	framework? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	framework? ( dev-python/tokenizers[${PYTHON_USEDEP}] )
	framework? ( ~dev-python/xlrd-2.0.1[${PYTHON_USEDEP}] )
	hf? ( dev-python/sentence-transformers[${PYTHON_USEDEP}] )
	hf? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	hf? ( dev-python/transformers[${PYTHON_USEDEP}] )
	hf-glm4? ( dev-python/transformers[${PYTHON_USEDEP}] )
	hf-glm4-1vl? ( dev-python/transformers[${PYTHON_USEDEP}] )
	hf-kimi? ( dev-python/blobfile[${PYTHON_USEDEP}] )
	hf-kimi? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	hf-kimi? ( dev-python/transformers[${PYTHON_USEDEP}] )
	hf-qwen2vl? ( dev-python/transformers[${PYTHON_USEDEP}] )
	hf-qwen3? ( dev-python/transformers[${PYTHON_USEDEP}] )
	llama-cpp? ( dev-python/llama-cpp-python[${PYTHON_USEDEP}] )
	llama-cpp-server? ( dev-python/llama-cpp-server-py-core[${PYTHON_USEDEP}] )
	llama-cpp-server? ( dev-python/llama-cpp-server-py[${PYTHON_USEDEP}] )
	model-vl? ( dev-python/librosa[${PYTHON_USEDEP}] )
	model-vl? ( dev-python/pillow[${PYTHON_USEDEP}] )
	proxy-anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	proxy-ollama? ( dev-python/ollama[${PYTHON_USEDEP}] )
	proxy-openai? ( dev-python/httpx[${PYTHON_USEDEP}] )
	proxy-openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	proxy-openai? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	proxy-qianfan? ( dev-python/qianfan[${PYTHON_USEDEP}] )
	proxy-tongyi? ( dev-python/dashscope[${PYTHON_USEDEP}] )
	proxy-tongyi? ( dev-python/openai[${PYTHON_USEDEP}] )
	proxy-zhipuai? ( dev-python/openai[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/cloudpickle[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/duckdb[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/duckdb-engine[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/msgpack[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/Pympler[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/python-multipart[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/schedule[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/shortuuid[${PYTHON_USEDEP}] )
	simple-framework? ( <dev-python/sqlalchemy-2.0.29[${PYTHON_USEDEP}] )
	simple-framework? ( ~dev-python/sqlparse-0.4.4[${PYTHON_USEDEP}] )
	simple-framework? ( dev-python/uvicorn[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
