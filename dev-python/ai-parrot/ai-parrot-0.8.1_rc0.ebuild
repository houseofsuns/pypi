# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="0.8.1rc0"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Live Chatbots based on Langchain chatbots and Agents     Integrated into Navigator Framework or used into any aiohttp applications. [top-max 0.15.7]"

HOMEPAGE="https://github.com/phenobarbital/ai-parrot"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="agents analytics anthropic chroma crew google groq hunggingfaces images loaders milvus openai qdrant vector"
DEPENDENCIES="~dev-python/cython-3.0.11[${PYTHON_USEDEP}]
	dev-python/langchain[${PYTHON_USEDEP}]
	dev-python/langchain-core[${PYTHON_USEDEP}]
	dev-python/langchain-community[${PYTHON_USEDEP}]
	dev-python/langchain-experimental[${PYTHON_USEDEP}]
	dev-python/langchain-text-splitters[${PYTHON_USEDEP}]
	dev-python/langchainhub[${PYTHON_USEDEP}]
	dev-python/huggingface-hub[${PYTHON_USEDEP}]
	dev-python/langgraph[${PYTHON_USEDEP}]
	dev-python/faiss-cpu[${PYTHON_USEDEP}]
	~dev-python/jq-1.7.0[${PYTHON_USEDEP}]
	dev-python/rank-bm25[${PYTHON_USEDEP}]
	~dev-python/tabulate-0.9.0[${PYTHON_USEDEP}]
	~dev-python/transitions-0.9.0[${PYTHON_USEDEP}]
	dev-python/sentencepiece[${PYTHON_USEDEP}]
	~dev-python/markdown2-2.4.13[${PYTHON_USEDEP}]
	dev-python/psycopg-binary[${PYTHON_USEDEP}]
	dev-python/langchain-postgres[${PYTHON_USEDEP}]
	dev-python/python-datamodel[${PYTHON_USEDEP}]
	dev-python/backoff[${PYTHON_USEDEP}]
	dev-python/asyncdb[${PYTHON_USEDEP}]
	dev-python/google-cloud-bigquery[${PYTHON_USEDEP}]
	~dev-python/numexpr-2.10.2[${PYTHON_USEDEP}]
	dev-python/fpdf[${PYTHON_USEDEP}]
	dev-python/python-docx[${PYTHON_USEDEP}]
	agents? ( dev-python/yfinance[${PYTHON_USEDEP}] )
	agents? ( dev-python/youtube-search[${PYTHON_USEDEP}] )
	agents? ( dev-python/wikipedia[${PYTHON_USEDEP}] )
	agents? ( dev-python/mediawikiapi[${PYTHON_USEDEP}] )
	agents? ( dev-python/wikibase-rest-api-client[${PYTHON_USEDEP}] )
	agents? ( dev-python/pyowm[${PYTHON_USEDEP}] )
	agents? ( dev-python/O365[${PYTHON_USEDEP}] )
	agents? ( dev-python/StackAPI[${PYTHON_USEDEP}] )
	agents? ( dev-python/duckduckgo-search[${PYTHON_USEDEP}] )
	agents? ( dev-python/google-search-results[${PYTHON_USEDEP}] )
	agents? ( >=dev-python/google-api-python-client-2.151.0[${PYTHON_USEDEP}] )
	agents? ( dev-python/pomegranate[${PYTHON_USEDEP}] )
	agents? ( dev-python/autoviz[${PYTHON_USEDEP}] )
	agents? ( dev-python/spacy[${PYTHON_USEDEP}] )
	loaders? ( dev-python/mammoth[${PYTHON_USEDEP}] )
	loaders? ( dev-python/markdownify[${PYTHON_USEDEP}] )
	loaders? ( dev-python/python-docx[${PYTHON_USEDEP}] )
	loaders? ( dev-python/PyMuPDF[${PYTHON_USEDEP}] )
	loaders? ( dev-python/pymupdf4llm[${PYTHON_USEDEP}] )
	loaders? ( dev-python/pdf4llm[${PYTHON_USEDEP}] )
	loaders? ( dev-python/langchain-huggingface[${PYTHON_USEDEP}] )
	images? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	images? ( dev-python/timm[${PYTHON_USEDEP}] )
	images? ( dev-python/ultralytics[${PYTHON_USEDEP}] )
	images? ( dev-python/albumentations[${PYTHON_USEDEP}] )
	images? ( ~dev-python/filetype-1.2.0[${PYTHON_USEDEP}] )
	images? ( dev-python/ImageHash[${PYTHON_USEDEP}] )
	images? ( dev-python/pgvector[${PYTHON_USEDEP}] )
	images? ( dev-python/pyheif[${PYTHON_USEDEP}] )
	images? ( dev-python/exif[${PYTHON_USEDEP}] )
	images? ( dev-python/pillow-avif-plugin[${PYTHON_USEDEP}] )
	images? ( dev-python/pillow-heif[${PYTHON_USEDEP}] )
	vector? ( dev-python/torch[${PYTHON_USEDEP}] )
	vector? ( dev-python/langchain-huggingface[${PYTHON_USEDEP}] )
	vector? ( dev-python/fastembed[${PYTHON_USEDEP}] )
	vector? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	vector? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	vector? ( dev-python/llama-index[${PYTHON_USEDEP}] )
	vector? ( dev-python/llama-cpp-python[${PYTHON_USEDEP}] )
	vector? ( dev-python/bitsandbytes[${PYTHON_USEDEP}] )
	vector? ( dev-python/datasets[${PYTHON_USEDEP}] )
	vector? ( dev-python/safetensors[${PYTHON_USEDEP}] )
	vector? ( dev-python/transformers[${PYTHON_USEDEP}] )
	vector? ( dev-python/sentence-transformers[${PYTHON_USEDEP}] )
	vector? ( dev-python/tokenizers[${PYTHON_USEDEP}] )
	vector? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	vector? ( dev-python/tf-keras[${PYTHON_USEDEP}] )
	vector? ( >=dev-python/simsimd-4.3.1[${PYTHON_USEDEP}] )
	vector? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	vector? ( dev-python/langchain-chroma[${PYTHON_USEDEP}] )
	vector? ( dev-python/chromadb[${PYTHON_USEDEP}] )
	vector? ( dev-python/langchain-duckdb[${PYTHON_USEDEP}] )
	vector? ( dev-python/langchain-ollama[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/langchain-anthropic[${PYTHON_USEDEP}] )
	openai? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	openai? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	google? ( dev-python/langchain-google-genai[${PYTHON_USEDEP}] )
	google? ( dev-python/langchain-google-vertexai[${PYTHON_USEDEP}] )
	google? ( dev-python/google-cloud-texttospeech[${PYTHON_USEDEP}] )
	google? ( dev-python/google-genai[${PYTHON_USEDEP}] )
	hunggingfaces? ( dev-python/llama-index-llms-huggingface[${PYTHON_USEDEP}] )
	groq? ( dev-python/groq[${PYTHON_USEDEP}] )
	groq? ( dev-python/langchain-groq[${PYTHON_USEDEP}] )
	qdrant? ( dev-python/qdrant-client[${PYTHON_USEDEP}] )
	qdrant? ( dev-python/langchain-qdrant[${PYTHON_USEDEP}] )
	milvus? ( dev-python/langchain-milvus[${PYTHON_USEDEP}] )
	milvus? ( dev-python/pymilvus[${PYTHON_USEDEP}] )
	milvus? ( dev-python/milvus[${PYTHON_USEDEP}] )
	chroma? ( dev-python/Chroma[${PYTHON_USEDEP}] )
	chroma? ( dev-python/langchain-chroma[${PYTHON_USEDEP}] )
	crew? ( dev-python/colbert-ai[${PYTHON_USEDEP}] )
	crew? ( dev-python/vanna[${PYTHON_USEDEP}] )
	crew? ( dev-python/crewai[${PYTHON_USEDEP}] )
	analytics? ( dev-python/annoy[${PYTHON_USEDEP}] )
	analytics? ( dev-python/gradio-tools[${PYTHON_USEDEP}] )
	analytics? ( dev-python/gradio-client[${PYTHON_USEDEP}] )
	analytics? ( dev-python/streamlit[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
