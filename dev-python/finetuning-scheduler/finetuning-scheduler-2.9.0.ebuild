# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A PyTorch Lightning extension that enhances model experimentation with flexible fine-tuning schedules."

HOMEPAGE="https://github.com/speediedan/finetuning-scheduler"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all cli dev examples extra ipynb test"
DEPENDENCIES="dev-python/torch[${PYTHON_USEDEP}]
	dev-python/lightning[${PYTHON_USEDEP}]
	examples? ( dev-python/datasets[${PYTHON_USEDEP}] )
	examples? ( dev-python/evaluate[${PYTHON_USEDEP}] )
	examples? ( dev-python/transformers[${PYTHON_USEDEP}] )
	examples? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	examples? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	examples? ( dev-python/tensorboardX[${PYTHON_USEDEP}] )
	examples? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	examples? ( dev-python/psutil[${PYTHON_USEDEP}] )
	examples? ( dev-python/jsonargparse[${PYTHON_USEDEP}] )
	examples? ( dev-python/omegaconf[${PYTHON_USEDEP}] )
	examples? ( dev-python/hydra-core[${PYTHON_USEDEP}] )
	extra? ( >=dev-python/rich-12.3.0[${PYTHON_USEDEP}] )
	extra? ( dev-python/jsonargparse[${PYTHON_USEDEP}] )
	extra? ( dev-python/omegaconf[${PYTHON_USEDEP}] )
	extra? ( dev-python/hydra-core[${PYTHON_USEDEP}] )
	test? ( >=dev-python/coverage-6.4[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pytest-6.0[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pytest-rerunfailures-10.2[${PYTHON_USEDEP}] )
	test? ( ~dev-python/twine-3.2[${PYTHON_USEDEP}] )
	test? ( >=dev-python/mypy-0.920[${PYTHON_USEDEP}] )
	test? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	test? ( <=dev-python/protobuf-3.20.1[${PYTHON_USEDEP}] )
	test? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	ipynb? ( dev-python/ipython[${PYTHON_USEDEP}] )
	ipynb? ( dev-python/jupytext[${PYTHON_USEDEP}] )
	ipynb? ( >=dev-python/nbval-0.9.6[${PYTHON_USEDEP}] )
	cli? ( dev-python/jsonargparse[${PYTHON_USEDEP}] )
	cli? ( dev-python/omegaconf[${PYTHON_USEDEP}] )
	cli? ( dev-python/hydra-core[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/rich-12.3.0[${PYTHON_USEDEP}] )
	dev? ( dev-python/jsonargparse[${PYTHON_USEDEP}] )
	dev? ( dev-python/omegaconf[${PYTHON_USEDEP}] )
	dev? ( dev-python/hydra-core[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/coverage-6.4[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/pytest-6.0[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/pytest-rerunfailures-10.2[${PYTHON_USEDEP}] )
	dev? ( ~dev-python/twine-3.2[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/mypy-0.920[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( <=dev-python/protobuf-3.20.1[${PYTHON_USEDEP}] )
	dev? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	dev? ( dev-python/ipython[${PYTHON_USEDEP}] )
	dev? ( dev-python/jupytext[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/nbval-0.9.6[${PYTHON_USEDEP}] )
	all? ( >=dev-python/rich-12.3.0[${PYTHON_USEDEP}] )
	all? ( dev-python/jsonargparse[${PYTHON_USEDEP}] )
	all? ( dev-python/omegaconf[${PYTHON_USEDEP}] )
	all? ( dev-python/hydra-core[${PYTHON_USEDEP}] )
	all? ( >=dev-python/coverage-6.4[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pytest-6.0[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pytest-rerunfailures-10.2[${PYTHON_USEDEP}] )
	all? ( ~dev-python/twine-3.2[${PYTHON_USEDEP}] )
	all? ( >=dev-python/mypy-0.920[${PYTHON_USEDEP}] )
	all? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	all? ( <=dev-python/protobuf-3.20.1[${PYTHON_USEDEP}] )
	all? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	all? ( dev-python/ipython[${PYTHON_USEDEP}] )
	all? ( dev-python/jupytext[${PYTHON_USEDEP}] )
	all? ( >=dev-python/nbval-0.9.6[${PYTHON_USEDEP}] )
	all? ( dev-python/datasets[${PYTHON_USEDEP}] )
	all? ( dev-python/evaluate[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	all? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorboardX[${PYTHON_USEDEP}] )
	all? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	all? ( dev-python/psutil[${PYTHON_USEDEP}] )
	all? ( dev-python/jsonargparse[${PYTHON_USEDEP}] )
	all? ( dev-python/omegaconf[${PYTHON_USEDEP}] )
	all? ( dev-python/hydra-core[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
