# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="ValidMind Library"

HOMEPAGE=""
LICENSE="                         DUAL LICENSE NOTICE"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all credit-risk datasets explainability huggingface llm nlp pii-detection pytorch stats xgboost"
DEPENDENCIES="dev-python/aiohttp[${PYTHON_USEDEP}]
	dev-python/ipywidgets[${PYTHON_USEDEP}]
	dev-python/kaleido[${PYTHON_USEDEP}]
	dev-python/matplotlib[${PYTHON_USEDEP}]
	<dev-python/mistune-4.0.0[${PYTHON_USEDEP}]
	<dev-python/nest-asyncio-2.0.0[${PYTHON_USEDEP}]
	dev-python/openai[${PYTHON_USEDEP}]
	<dev-python/pandas-3.0.0[${PYTHON_USEDEP}]
	>=dev-python/plotly-5.0.0[${PYTHON_USEDEP}]
	dev-python/polars[${PYTHON_USEDEP}]
	dev-python/python-dotenv[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	dev-python/seaborn[${PYTHON_USEDEP}]
	dev-python/sentry-sdk[${PYTHON_USEDEP}]
	<dev-python/tabulate-0.10.0[${PYTHON_USEDEP}]
	dev-python/tiktoken[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/anywidget[${PYTHON_USEDEP}]
	dev-python/beautifulsoup4[${PYTHON_USEDEP}]
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/pycocoevalcap[${PYTHON_USEDEP}] )
	all? ( dev-python/ragas[${PYTHON_USEDEP}] )
	all? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	all? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	all? ( dev-python/scipy[${PYTHON_USEDEP}] )
	all? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	all? ( dev-python/langdetect[${PYTHON_USEDEP}] )
	all? ( dev-python/nltk[${PYTHON_USEDEP}] )
	all? ( dev-python/textblob[${PYTHON_USEDEP}] )
	all? ( dev-python/evaluate[${PYTHON_USEDEP}] )
	all? ( dev-python/rouge[${PYTHON_USEDEP}] )
	all? ( dev-python/bert-score[${PYTHON_USEDEP}] )
	all? ( dev-python/arch[${PYTHON_USEDEP}] )
	all? ( dev-python/shap[${PYTHON_USEDEP}] )
	all? ( dev-python/scorecardpy[${PYTHON_USEDEP}] )
	huggingface? ( dev-python/transformers[${PYTHON_USEDEP}] )
	huggingface? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	llm? ( dev-python/torch[${PYTHON_USEDEP}] )
	llm? ( dev-python/transformers[${PYTHON_USEDEP}] )
	llm? ( dev-python/pycocoevalcap[${PYTHON_USEDEP}] )
	llm? ( dev-python/ragas[${PYTHON_USEDEP}] )
	llm? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	llm? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	llm? ( dev-python/deepeval[${PYTHON_USEDEP}] )
	nlp? ( dev-python/langdetect[${PYTHON_USEDEP}] )
	nlp? ( dev-python/nltk[${PYTHON_USEDEP}] )
	nlp? ( dev-python/textblob[${PYTHON_USEDEP}] )
	nlp? ( dev-python/evaluate[${PYTHON_USEDEP}] )
	nlp? ( dev-python/rouge[${PYTHON_USEDEP}] )
	nlp? ( dev-python/bert-score[${PYTHON_USEDEP}] )
	pytorch? ( dev-python/torch[${PYTHON_USEDEP}] )
	stats? ( dev-python/scipy[${PYTHON_USEDEP}] )
	stats? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	stats? ( dev-python/arch[${PYTHON_USEDEP}] )
	xgboost? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	explainability? ( dev-python/shap[${PYTHON_USEDEP}] )
	credit-risk? ( dev-python/scorecardpy[${PYTHON_USEDEP}] )
	datasets? ( dev-python/datasets[${PYTHON_USEDEP}] )
	pii-detection? ( dev-python/presidio-analyzer[${PYTHON_USEDEP}] )
	pii-detection? ( dev-python/presidio-structured[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
