# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="An open source framework for voice (and multimodal) assistants"

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="aic anthropic assemblyai asyncai aws aws-nova-sonic azure cartesia daily deepgram elevenlabs fal fish gladia google groq gstreamer heygen hume koala krisp langchain livekit lmnt local local-smart-turn local-smart-turn-v3 mcp mem0 mlx-whisper moondream neuphonic noisereduce openai openpipe playht rime riva runner sarvam sentry silero simli soniox soundfile speechmatics strands tracing ultravox webrtc websocket websockets-base whisper"
DEPENDENCIES="<dev-python/aiofiles-25.0[${PYTHON_USEDEP}]
	<dev-python/aiohttp-4.0[${PYTHON_USEDEP}]
	~dev-python/audioop-lts-0.2.1[${PYTHON_USEDEP}]
	dev-python/docstring_parser[${PYTHON_USEDEP}]
	~dev-python/loguru-0.7.3[${PYTHON_USEDEP}]
	<dev-python/markdown-4.0[${PYTHON_USEDEP}]
	dev-python/nltk[${PYTHON_USEDEP}]
	<dev-python/numpy-3.0[${PYTHON_USEDEP}]
	<dev-python/pillow-12.0[${PYTHON_USEDEP}]
	~dev-python/protobuf-5.29.3[${PYTHON_USEDEP}]
	<dev-python/pydantic-3.0[${PYTHON_USEDEP}]
	dev-python/pyloudnorm[${PYTHON_USEDEP}]
	dev-python/resampy[${PYTHON_USEDEP}]
	dev-python/soxr[${PYTHON_USEDEP}]
	dev-python/openai[${PYTHON_USEDEP}]
	dev-python/numba[${PYTHON_USEDEP}]
	dev-python/wait-for2[${PYTHON_USEDEP}]
	aic? ( dev-python/aic-sdk[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	assemblyai? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	asyncai? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	aws? ( dev-python/aioboto3[${PYTHON_USEDEP}] )
	aws? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	aws-nova-sonic? ( dev-python/aws-sdk-bedrock-runtime[${PYTHON_USEDEP}] )
	azure? ( dev-python/azure-cognitiveservices-speech[${PYTHON_USEDEP}] )
	cartesia? ( dev-python/cartesia[${PYTHON_USEDEP}] )
	cartesia? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	daily? ( dev-python/daily-python[${PYTHON_USEDEP}] )
	deepgram? ( dev-python/deepgram-sdk[${PYTHON_USEDEP}] )
	elevenlabs? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	fal? ( dev-python/fal-client[${PYTHON_USEDEP}] )
	fish? ( dev-python/ormsgpack[${PYTHON_USEDEP}] )
	fish? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	gladia? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	google? ( dev-python/google-cloud-speech[${PYTHON_USEDEP}] )
	google? ( dev-python/google-cloud-texttospeech[${PYTHON_USEDEP}] )
	google? ( dev-python/google-genai[${PYTHON_USEDEP}] )
	google? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	groq? ( dev-python/groq[${PYTHON_USEDEP}] )
	gstreamer? ( ~dev-python/pygobject-3.50.0[${PYTHON_USEDEP}] )
	heygen? ( dev-python/livekit[${PYTHON_USEDEP}] )
	heygen? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	hume? ( dev-python/hume[${PYTHON_USEDEP}] )
	krisp? ( dev-python/pipecat-ai-krisp[${PYTHON_USEDEP}] )
	koala? ( dev-python/pvkoala[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain-community[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	livekit? ( dev-python/livekit[${PYTHON_USEDEP}] )
	livekit? ( dev-python/livekit-api[${PYTHON_USEDEP}] )
	livekit? ( <dev-python/tenacity-10.0.0[${PYTHON_USEDEP}] )
	lmnt? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	local? ( ~dev-python/pyaudio-0.2.14[${PYTHON_USEDEP}] )
	mcp? ( dev-python/mcp[${PYTHON_USEDEP}] )
	mem0? ( dev-python/mem0ai[${PYTHON_USEDEP}] )
	mlx-whisper? ( dev-python/mlx-whisper[${PYTHON_USEDEP}] )
	moondream? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	moondream? ( dev-python/einops[${PYTHON_USEDEP}] )
	moondream? ( dev-python/pyvips[${PYTHON_USEDEP}] )
	moondream? ( dev-python/timm[${PYTHON_USEDEP}] )
	moondream? ( dev-python/transformers[${PYTHON_USEDEP}] )
	neuphonic? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	noisereduce? ( dev-python/noisereduce[${PYTHON_USEDEP}] )
	openai? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	openpipe? ( dev-python/openpipe[${PYTHON_USEDEP}] )
	playht? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	rime? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	riva? ( dev-python/nvidia-riva-client[${PYTHON_USEDEP}] )
	runner? ( <dev-python/python-dotenv-2.0.0[${PYTHON_USEDEP}] )
	runner? ( <dev-python/uvicorn-1.0.0[${PYTHON_USEDEP}] )
	runner? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	runner? ( dev-python/pipecat-ai-small-webrtc-prebuilt[${PYTHON_USEDEP}] )
	sarvam? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	sentry? ( dev-python/sentry-sdk[${PYTHON_USEDEP}] )
	local-smart-turn? ( dev-python/coremltools[${PYTHON_USEDEP}] )
	local-smart-turn? ( dev-python/transformers[${PYTHON_USEDEP}] )
	local-smart-turn? ( dev-python/torch[${PYTHON_USEDEP}] )
	local-smart-turn? ( dev-python/torchaudio[${PYTHON_USEDEP}] )
	local-smart-turn-v3? ( dev-python/transformers[${PYTHON_USEDEP}] )
	local-smart-turn-v3? ( dev-python/onnxruntime[${PYTHON_USEDEP}] )
	silero? ( dev-python/onnxruntime[${PYTHON_USEDEP}] )
	simli? ( dev-python/simli-ai[${PYTHON_USEDEP}] )
	soniox? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	soundfile? ( ~dev-python/soundfile-0.13.0[${PYTHON_USEDEP}] )
	speechmatics? ( dev-python/speechmatics-rt[${PYTHON_USEDEP}] )
	strands? ( dev-python/strands-agents[${PYTHON_USEDEP}] )
	tracing? ( >=dev-python/opentelemetry-sdk-1.33.0[${PYTHON_USEDEP}] )
	tracing? ( >=dev-python/opentelemetry-api-1.33.0[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-instrumentation[${PYTHON_USEDEP}] )
	ultravox? ( dev-python/transformers[${PYTHON_USEDEP}] )
	ultravox? ( dev-python/vllm[${PYTHON_USEDEP}] )
	webrtc? ( dev-python/aiortc[${PYTHON_USEDEP}] )
	webrtc? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	websocket? ( dev-python/pipecat-ai[${PYTHON_USEDEP}] )
	websocket? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	websockets-base? ( <dev-python/websockets-16.0[${PYTHON_USEDEP}] )
	whisper? ( dev-python/faster-whisper[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
