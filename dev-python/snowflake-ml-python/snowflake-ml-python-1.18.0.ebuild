# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="The machine learning client library that is used for interacting with Snowflake to build machine learning solutions."

HOMEPAGE="https://github.com/snowflakedb/snowflake-ml-python"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all altair catboost keras lightgbm mlflow prophet streamlit tensorflow torch transformers"
DEPENDENCIES="<dev-python/anyio-5.0[${PYTHON_USEDEP}]
	<dev-python/cachetools-6.0[${PYTHON_USEDEP}]
	>=dev-python/cloudpickle-2.0.0[${PYTHON_USEDEP}]
	dev-python/cryptography[${PYTHON_USEDEP}]
	<dev-python/fsspec-2026.0[${PYTHON_USEDEP}]
	<dev-python/importlib-resources-7.0[${PYTHON_USEDEP}]
	<dev-python/numpy-3.0[${PYTHON_USEDEP}]
	<dev-python/packaging-25.0[${PYTHON_USEDEP}]
	<dev-python/pandas-3.0[${PYTHON_USEDEP}]
	<dev-python/platformdirs-5.0[${PYTHON_USEDEP}]
	<dev-python/pyarrow-19.0.0[${PYTHON_USEDEP}]
	<dev-python/pydantic-3.0[${PYTHON_USEDEP}]
	<dev-python/pyjwt-3.0[${PYTHON_USEDEP}]
	<dev-python/pytimeparse-2.0[${PYTHON_USEDEP}]
	<dev-python/pyyaml-7.0[${PYTHON_USEDEP}]
	<dev-python/retrying-2.0[${PYTHON_USEDEP}]
	dev-python/s3fs[${PYTHON_USEDEP}]
	<dev-python/scikit-learn-1.8[${PYTHON_USEDEP}]
	<dev-python/scipy-2.0[${PYTHON_USEDEP}]
	dev-python/shap[${PYTHON_USEDEP}]
	dev-python/snowflake-connector-python[${PYTHON_USEDEP}]
	dev-python/snowflake-snowpark-python[${PYTHON_USEDEP}]
	dev-python/snowflake-core[${PYTHON_USEDEP}]
	<dev-python/sqlparse-1.0[${PYTHON_USEDEP}]
	<dev-python/tqdm-5.0[${PYTHON_USEDEP}]
	<dev-python/typing-extensions-5.0[${PYTHON_USEDEP}]
	dev-python/xgboost[${PYTHON_USEDEP}]
	all? ( dev-python/altair[${PYTHON_USEDEP}] )
	all? ( dev-python/catboost[${PYTHON_USEDEP}] )
	all? ( dev-python/keras[${PYTHON_USEDEP}] )
	all? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	all? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	all? ( dev-python/prophet[${PYTHON_USEDEP}] )
	all? ( dev-python/sentence-transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	all? ( dev-python/streamlit[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all? ( dev-python/tokenizers[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/torchdata[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	altair? ( dev-python/altair[${PYTHON_USEDEP}] )
	catboost? ( dev-python/catboost[${PYTHON_USEDEP}] )
	keras? ( dev-python/keras[${PYTHON_USEDEP}] )
	keras? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	keras? ( dev-python/torch[${PYTHON_USEDEP}] )
	lightgbm? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	prophet? ( dev-python/prophet[${PYTHON_USEDEP}] )
	streamlit? ( dev-python/streamlit[${PYTHON_USEDEP}] )
	tensorflow? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch? ( dev-python/torchdata[${PYTHON_USEDEP}] )
	transformers? ( dev-python/sentence-transformers[${PYTHON_USEDEP}] )
	transformers? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	transformers? ( dev-python/tokenizers[${PYTHON_USEDEP}] )
	transformers? ( dev-python/torch[${PYTHON_USEDEP}] )
	transformers? ( dev-python/transformers[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
