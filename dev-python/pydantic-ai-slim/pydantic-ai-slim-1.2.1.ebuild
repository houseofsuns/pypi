# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Agent Framework / shim to use Pydantic with LLMs, slim package"

HOMEPAGE="https://github.com/pydantic/pydantic-ai/tree/main/pydantic_ai_slim"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="a2a ag-ui anthropic bedrock cli cohere dbos duckduckgo evals google groq huggingface logfire mcp mistral openai prefect retries tavily temporal vertexai"
DEPENDENCIES="dev-python/genai-prices[${PYTHON_USEDEP}]
	>=dev-python/griffe-1.3.2[${PYTHON_USEDEP}]
	>=dev-python/httpx-0.27[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-api-1.28.0[${PYTHON_USEDEP}]
	dev-python/pydantic-graph[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.10[${PYTHON_USEDEP}]
	>=dev-python/typing-inspection-0.4.0[${PYTHON_USEDEP}]
	a2a? ( dev-python/fasta2a[${PYTHON_USEDEP}] )
	ag-ui? ( dev-python/ag-ui-protocol[${PYTHON_USEDEP}] )
	ag-ui? ( >=dev-python/starlette-0.45.3[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	bedrock? ( >=dev-python/boto3-1.39.0[${PYTHON_USEDEP}] )
	cli? ( >=dev-python/argcomplete-3.5.0[${PYTHON_USEDEP}] )
	cli? ( >=dev-python/prompt-toolkit-3.0[${PYTHON_USEDEP}] )
	cli? ( >=dev-python/pyperclip-1.9.0[${PYTHON_USEDEP}] )
	cli? ( >=dev-python/rich-13.0[${PYTHON_USEDEP}] )
	cohere? ( dev-python/cohere[${PYTHON_USEDEP}] )
	dbos? ( dev-python/dbos[${PYTHON_USEDEP}] )
	duckduckgo? ( dev-python/ddgs[${PYTHON_USEDEP}] )
	evals? ( dev-python/pydantic-evals[${PYTHON_USEDEP}] )
	google? ( dev-python/google-genai[${PYTHON_USEDEP}] )
	groq? ( dev-python/groq[${PYTHON_USEDEP}] )
	huggingface? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	logfire? ( dev-python/logfire[${PYTHON_USEDEP}] )
	mcp? ( dev-python/mcp[${PYTHON_USEDEP}] )
	mistral? ( dev-python/mistralai[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	prefect? ( dev-python/prefect[${PYTHON_USEDEP}] )
	retries? ( >=dev-python/tenacity-8.2.3[${PYTHON_USEDEP}] )
	tavily? ( dev-python/tavily-python[${PYTHON_USEDEP}] )
	temporal? ( dev-python/temporalio[${PYTHON_USEDEP}] )
	vertexai? ( >=dev-python/google-auth-2.36.0[${PYTHON_USEDEP}] )
	vertexai? ( >=dev-python/requests-2.32.2[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
