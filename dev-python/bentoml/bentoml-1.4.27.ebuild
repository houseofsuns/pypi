# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="BentoML: The easiest way to serve AI apps and models"

HOMEPAGE="https://bentoml.com"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all aws grpc grpc-channelz grpc-reflection io io-image io-pandas monitor-otlp tracing tracing-jaeger tracing-otlp tracing-zipkin triton unsloth"
DEPENDENCIES=">=dev-python/a2wsgi-1.10.7[${PYTHON_USEDEP}]
	dev-python/aiohttp[${PYTHON_USEDEP}]
	>=dev-python/aiosqlite-0.20.0[${PYTHON_USEDEP}]
	>=dev-python/attrs-22.2.0[${PYTHON_USEDEP}]
	<dev-python/cattrs-23.2.0[${PYTHON_USEDEP}]
	dev-python/click-option-group[${PYTHON_USEDEP}]
	>=dev-python/click-7.0[${PYTHON_USEDEP}]
	>=dev-python/cloudpickle-2.0.0[${PYTHON_USEDEP}]
	>=dev-python/fsspec-2025.7.0[${PYTHON_USEDEP}]
	dev-python/httpx[${PYTHON_USEDEP}]
	dev-python/httpx-ws[${PYTHON_USEDEP}]
	>=dev-python/jinja2-3.0.1[${PYTHON_USEDEP}]
	dev-python/kantoku[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/nvidia-ml-py[${PYTHON_USEDEP}]
	~dev-python/opentelemetry-api-1.20[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation-aiohttp-client[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation[${PYTHON_USEDEP}]
	~dev-python/opentelemetry-sdk-1.20[${PYTHON_USEDEP}]
	~dev-python/opentelemetry-semantic-conventions-0.41_beta0[${PYTHON_USEDEP}]
	dev-python/opentelemetry-util-http[${PYTHON_USEDEP}]
	>=dev-python/packaging-22.0[${PYTHON_USEDEP}]
	dev-python/pathspec[${PYTHON_USEDEP}]
	dev-python/pip-requirements-parser[${PYTHON_USEDEP}]
	>=dev-python/prometheus-client-0.10.0[${PYTHON_USEDEP}]
	dev-python/psutil[${PYTHON_USEDEP}]
	<dev-python/pydantic-3.0[${PYTHON_USEDEP}]
	dev-python/python-dateutil[${PYTHON_USEDEP}]
	dev-python/python-json-logger[${PYTHON_USEDEP}]
	dev-python/python-multipart[${PYTHON_USEDEP}]
	>=dev-python/pyyaml-5.0[${PYTHON_USEDEP}]
	dev-python/rich-toolkit[${PYTHON_USEDEP}]
	>=dev-python/rich-11.2.0[${PYTHON_USEDEP}]
	dev-python/schema[${PYTHON_USEDEP}]
	dev-python/simple-di[${PYTHON_USEDEP}]
	>=dev-python/starlette-0.24.0[${PYTHON_USEDEP}]
	dev-python/tomli-w[${PYTHON_USEDEP}]
	>=dev-python/uvicorn-0.22.0[${PYTHON_USEDEP}]
	>=dev-python/watchfiles-0.15.0[${PYTHON_USEDEP}]
	all? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	all? ( dev-python/grpcio-channelz[${PYTHON_USEDEP}] )
	all? ( dev-python/grpcio-health-checking[${PYTHON_USEDEP}] )
	all? ( dev-python/grpcio-reflection[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-exporter-jaeger[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-exporter-otlp-proto-grpc[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-exporter-otlp-proto-http[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-exporter-zipkin[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-grpc[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pandas-1.0[${PYTHON_USEDEP}] )
	all? ( dev-python/pillow[${PYTHON_USEDEP}] )
	all? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	all? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	all? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	aws? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	grpc? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	grpc? ( dev-python/grpcio-health-checking[${PYTHON_USEDEP}] )
	grpc? ( dev-python/opentelemetry-instrumentation-grpc[${PYTHON_USEDEP}] )
	grpc? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/grpcio-channelz[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/grpcio-health-checking[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/opentelemetry-instrumentation-grpc[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/grpcio-health-checking[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/grpcio-reflection[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/opentelemetry-instrumentation-grpc[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	io? ( >=dev-python/pandas-1.0[${PYTHON_USEDEP}] )
	io? ( dev-python/pillow[${PYTHON_USEDEP}] )
	io? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	io-image? ( dev-python/pillow[${PYTHON_USEDEP}] )
	io-pandas? ( >=dev-python/pandas-1.0[${PYTHON_USEDEP}] )
	io-pandas? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	monitor-otlp? ( dev-python/opentelemetry-exporter-otlp-proto-grpc[${PYTHON_USEDEP}] )
	monitor-otlp? ( dev-python/opentelemetry-exporter-otlp-proto-http[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-exporter-jaeger[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-exporter-zipkin[${PYTHON_USEDEP}] )
	tracing-jaeger? ( dev-python/opentelemetry-exporter-jaeger[${PYTHON_USEDEP}] )
	tracing-otlp? ( dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}] )
	tracing-zipkin? ( dev-python/opentelemetry-exporter-zipkin[${PYTHON_USEDEP}] )
	triton? ( dev-python/tritonclient[${PYTHON_USEDEP}] )
	triton? ( dev-python/tritonclient[${PYTHON_USEDEP}] )
	unsloth? ( dev-python/bentoml-unsloth[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
