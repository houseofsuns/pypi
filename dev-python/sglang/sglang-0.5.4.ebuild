# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="SGLang is a fast serving framework for large language models and vision language models."

HOMEPAGE="https://github.com/sgl-project/sglang"
LICENSE="Apache License"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="blackwell blackwell-aarch64 checkpoint-engine cu130 cu130-all dev modelopt test tracing"
DEPENDENCIES="dev-python/ipython[${PYTHON_USEDEP}]
	dev-python/aiohttp[${PYTHON_USEDEP}]
	dev-python/anthropic[${PYTHON_USEDEP}]
	dev-python/blobfile[${PYTHON_USEDEP}]
	dev-python/build[${PYTHON_USEDEP}]
	dev-python/compressed-tensors[${PYTHON_USEDEP}]
	dev-python/cuda-python[${PYTHON_USEDEP}]
	dev-python/decord2[${PYTHON_USEDEP}]
	dev-python/datasets[${PYTHON_USEDEP}]
	dev-python/einops[${PYTHON_USEDEP}]
	dev-python/fastapi[${PYTHON_USEDEP}]
	dev-python/flashinfer-python[${PYTHON_USEDEP}]
	dev-python/hf-transfer[${PYTHON_USEDEP}]
	dev-python/huggingface-hub[${PYTHON_USEDEP}]
	dev-python/interegular[${PYTHON_USEDEP}]
	dev-python/llguidance[${PYTHON_USEDEP}]
	dev-python/modelscope[${PYTHON_USEDEP}]
	dev-python/msgspec[${PYTHON_USEDEP}]
	dev-python/ninja[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/nvidia-cutlass-dsl[${PYTHON_USEDEP}]
	dev-python/openai-harmony[${PYTHON_USEDEP}]
	dev-python/openai[${PYTHON_USEDEP}]
	dev-python/orjson[${PYTHON_USEDEP}]
	dev-python/outlines[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/partial-json-parser[${PYTHON_USEDEP}]
	dev-python/pillow[${PYTHON_USEDEP}]
	>=dev-python/prometheus-client-0.20.0[${PYTHON_USEDEP}]
	dev-python/psutil[${PYTHON_USEDEP}]
	dev-python/py-spy[${PYTHON_USEDEP}]
	dev-python/pybase64[${PYTHON_USEDEP}]
	dev-python/pydantic[${PYTHON_USEDEP}]
	dev-python/nvidia-ml-py[${PYTHON_USEDEP}]
	dev-python/python-multipart[${PYTHON_USEDEP}]
	>=dev-python/pyzmq-25.1.2[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/sentencepiece[${PYTHON_USEDEP}]
	dev-python/setproctitle[${PYTHON_USEDEP}]
	dev-python/sgl-kernel[${PYTHON_USEDEP}]
	~dev-python/soundfile-0.13.1[${PYTHON_USEDEP}]
	dev-python/tiktoken[${PYTHON_USEDEP}]
	dev-python/timm[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/torch-memory-saver[${PYTHON_USEDEP}]
	dev-python/torchao[${PYTHON_USEDEP}]
	dev-python/torchaudio[${PYTHON_USEDEP}]
	dev-python/torchvision[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/transformers[${PYTHON_USEDEP}]
	dev-python/uvicorn[${PYTHON_USEDEP}]
	dev-python/uvloop[${PYTHON_USEDEP}]
	dev-python/xgrammar[${PYTHON_USEDEP}]
	~dev-python/grpcio-1.75.1[${PYTHON_USEDEP}]
	dev-python/grpcio-tools[${PYTHON_USEDEP}]
	dev-python/grpcio-reflection[${PYTHON_USEDEP}]
	dev-python/grpcio-health-checking[${PYTHON_USEDEP}]
	modelopt? ( dev-python/nvidia-modelopt[${PYTHON_USEDEP}] )
	test? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	test? ( dev-python/expecttest[${PYTHON_USEDEP}] )
	test? ( dev-python/gguf[${PYTHON_USEDEP}] )
	test? ( dev-python/jsonlines[${PYTHON_USEDEP}] )
	test? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	test? ( dev-python/pandas[${PYTHON_USEDEP}] )
	test? ( dev-python/peft[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/sentence-transformers[${PYTHON_USEDEP}] )
	test? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	checkpoint-engine? ( dev-python/checkpoint-engine[${PYTHON_USEDEP}] )
	dev? ( dev-python/sglang[${PYTHON_USEDEP}] )
	cu130? ( dev-python/torch[${PYTHON_USEDEP}] )
	cu130? ( dev-python/torchaudio[${PYTHON_USEDEP}] )
	cu130? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	cu130-all? ( dev-python/sglang[${PYTHON_USEDEP}] )
	cu130-all? ( dev-python/sglang[${PYTHON_USEDEP}] )
	cu130-all? ( dev-python/sglang[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-api[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-exporter-otlp-proto-grpc[${PYTHON_USEDEP}] )
	tracing? ( dev-python/opentelemetry-sdk[${PYTHON_USEDEP}] )
	blackwell? ( dev-python/sglang[${PYTHON_USEDEP}] )
	blackwell-aarch64? ( dev-python/sglang[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
