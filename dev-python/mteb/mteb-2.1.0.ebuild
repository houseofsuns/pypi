# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Massive Text Embedding Benchmark"

HOMEPAGE="https://github.com/embeddings-benchmark/mteb"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="ark blip2 bm25s codecarbon cohere colpali-engine faiss-cpu flagembedding flash-attention gritlm image jina jina-v4 leaderboard llama-embed-nemotron llm2vec model2vec nomic open-clip-torch openai peft pylate timm vertexai voyage-v voyageai xet xformers youtu"
DEPENDENCIES="dev-python/datasets[${PYTHON_USEDEP}]
	<dev-python/numpy-3.0.0[${PYTHON_USEDEP}]
	>=dev-python/requests-2.26.0[${PYTHON_USEDEP}]
	>=dev-python/scikit-learn-1.4.0[${PYTHON_USEDEP}]
	>=dev-python/scipy-0.0.0[${PYTHON_USEDEP}]
	dev-python/sentence-transformers[${PYTHON_USEDEP}]
	>=dev-python/typing-extensions-4.5.0[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	>dev-python/tqdm-1.0.0[${PYTHON_USEDEP}]
	>=dev-python/rich-0.0.0[${PYTHON_USEDEP}]
	dev-python/pytrec-eval-terrier[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.0.0[${PYTHON_USEDEP}]
	dev-python/polars[${PYTHON_USEDEP}]
	image? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	codecarbon? ( dev-python/codecarbon[${PYTHON_USEDEP}] )
	leaderboard? ( dev-python/gradio[${PYTHON_USEDEP}] )
	leaderboard? ( <dev-python/plotly-6.0.0[${PYTHON_USEDEP}] )
	leaderboard? ( >=dev-python/cachetools-5.2.0[${PYTHON_USEDEP}] )
	leaderboard? ( >=dev-python/matplotlib-3.9.4[${PYTHON_USEDEP}] )
	peft? ( dev-python/peft[${PYTHON_USEDEP}] )
	flagembedding? ( dev-python/FlagEmbedding[${PYTHON_USEDEP}] )
	jina? ( dev-python/einops[${PYTHON_USEDEP}] )
	jina-v4? ( dev-python/peft[${PYTHON_USEDEP}] )
	jina-v4? ( dev-python/transformers[${PYTHON_USEDEP}] )
	jina-v4? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	flash-attention? ( dev-python/flash-attn[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	openai? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	model2vec? ( dev-python/model2vec[${PYTHON_USEDEP}] )
	pylate? ( dev-python/pylate[${PYTHON_USEDEP}] )
	bm25s? ( dev-python/bm25s[${PYTHON_USEDEP}] )
	bm25s? ( dev-python/PyStemmer[${PYTHON_USEDEP}] )
	gritlm? ( dev-python/gritlm[${PYTHON_USEDEP}] )
	xformers? ( dev-python/xformers[${PYTHON_USEDEP}] )
	blip2? ( dev-python/salesforce-lavis[${PYTHON_USEDEP}] )
	voyageai? ( dev-python/voyageai[${PYTHON_USEDEP}] )
	voyage-v? ( dev-python/voyageai[${PYTHON_USEDEP}] )
	voyage-v? ( >dev-python/tenacity-9.0.0[${PYTHON_USEDEP}] )
	cohere? ( dev-python/cohere[${PYTHON_USEDEP}] )
	vertexai? ( dev-python/vertexai[${PYTHON_USEDEP}] )
	llm2vec? ( dev-python/llm2vec[${PYTHON_USEDEP}] )
	timm? ( dev-python/timm[${PYTHON_USEDEP}] )
	open-clip-torch? ( dev-python/open-clip-torch[${PYTHON_USEDEP}] )
	nomic? ( dev-python/einops[${PYTHON_USEDEP}] )
	ark? ( dev-python/volcengine-python-sdk[${PYTHON_USEDEP}] )
	ark? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	colpali-engine? ( dev-python/colpali-engine[${PYTHON_USEDEP}] )
	xet? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	youtu? ( dev-python/tencentcloud-sdk-python-common[${PYTHON_USEDEP}] )
	youtu? ( dev-python/tencentcloud-sdk-python-lkeap[${PYTHON_USEDEP}] )
	llama-embed-nemotron? ( dev-python/transformers[${PYTHON_USEDEP}] )
	faiss-cpu? ( dev-python/faiss-cpu[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
