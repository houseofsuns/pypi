# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Optimum Library is an extension of the Hugging Face Transformers library, providing a framework to integrate third-party libraries from Hardware Partners and interface with their specific functionality."

HOMEPAGE="https://www.intel.com"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="diffusers ipex neural-compressor nncf openvino quality tests"
DEPENDENCIES="dev-python/torch[${PYTHON_USEDEP}]
	dev-python/optimum-onnx[${PYTHON_USEDEP}]
	dev-python/transformers[${PYTHON_USEDEP}]
	dev-python/setuptools[${PYTHON_USEDEP}]
	nncf? ( dev-python/nncf[${PYTHON_USEDEP}] )
	openvino? ( dev-python/nncf[${PYTHON_USEDEP}] )
	openvino? ( dev-python/openvino[${PYTHON_USEDEP}] )
	openvino? ( dev-python/openvino-tokenizers[${PYTHON_USEDEP}] )
	neural-compressor? ( dev-python/neural-compressor[${PYTHON_USEDEP}] )
	neural-compressor? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	neural-compressor? ( dev-python/transformers[${PYTHON_USEDEP}] )
	neural-compressor? ( dev-python/datasets[${PYTHON_USEDEP}] )
	ipex? ( dev-python/intel-extension-for-pytorch[${PYTHON_USEDEP}] )
	ipex? ( dev-python/transformers[${PYTHON_USEDEP}] )
	ipex? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	diffusers? ( dev-python/diffusers[${PYTHON_USEDEP}] )
	quality? ( ~dev-python/black-23.1[${PYTHON_USEDEP}] )
	quality? ( dev-python/ruff[${PYTHON_USEDEP}] )
	tests? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	tests? ( <dev-python/pytest-8.0.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/parameterized[${PYTHON_USEDEP}] )
	tests? ( dev-python/pillow[${PYTHON_USEDEP}] )
	tests? ( dev-python/evaluate[${PYTHON_USEDEP}] )
	tests? ( dev-python/py-cpuinfo[${PYTHON_USEDEP}] )
	tests? ( dev-python/sacremoses[${PYTHON_USEDEP}] )
	tests? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	tests? ( dev-python/torchaudio[${PYTHON_USEDEP}] )
	tests? ( dev-python/rjieba[${PYTHON_USEDEP}] )
	tests? ( dev-python/timm[${PYTHON_USEDEP}] )
	tests? ( dev-python/invisible-watermark[${PYTHON_USEDEP}] )
	tests? ( dev-python/transformers-stream-generator[${PYTHON_USEDEP}] )
	tests? ( dev-python/einops[${PYTHON_USEDEP}] )
	tests? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	tests? ( dev-python/sentence-transformers[${PYTHON_USEDEP}] )
	tests? ( dev-python/open-clip-torch[${PYTHON_USEDEP}] )
	tests? ( dev-python/peft[${PYTHON_USEDEP}] )
	tests? ( dev-python/datasets[${PYTHON_USEDEP}] )
	tests? ( dev-python/tbb[${PYTHON_USEDEP}] )
	tests? ( dev-python/langchain-huggingface[${PYTHON_USEDEP}] )
	tests? ( dev-python/hf-xet[${PYTHON_USEDEP}] )
	tests? ( dev-python/num2words[${PYTHON_USEDEP}] )
	tests? ( dev-python/vocos[${PYTHON_USEDEP}] )
	tests? ( dev-python/vector-quantize-pytorch[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
